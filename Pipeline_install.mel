python("\n\
#Pipeline_install.mel\n\
\n\
from maya import cmds, mel\n\
import os, shutil, urllib2, shutil, zipfile\n\
\n\
def hasInternet(url):\n\
   try:\n\
       proxy    = urllib2.ProxyHandler({})\n\
       opener   = urllib2.build_opener(proxy)\n\
       urllib2.install_opener(opener)\n\
       response = urllib2.urlopen(url, timeout=60)\n\
       return True\n\
   except: pass\n\
   return False\n\
\n\
def launchInstall():\n\
    INSTALL_URL = 'https://raw.githubusercontent.com/Alehaaaa/pipe/main/onlineInstall.py'\n\
    PipelineInstall = None\n\
    if hasInternet(INSTALL_URL):\n\
        try: PipelineInstall = urllib2.urlopen(INSTALL_URL, timeout=60).read()\n\
        except IOError: pass\n\
    if PipelineInstall: exec(PipelineInstall)\n\
    else:\n\
        cmds.confirmDialog(title='Pipeline 2 Install', message='Internet connection not detected, needed to proceed.\\nConsider configuring your firewall so that Maya can access the internet.', button='Close')\n\
\n\
def formatPath(path):\n\
    path = path.replace('/', os.sep)\n\
    path = path.replace('\\\\', os.sep)\n\
    return path\n\
\n\
def download(downloadUrl, saveFile):\n\
\n\
	try:    response        = urllib2.urlopen(downloadUrl, timeout=60)          \n\
	except: pass\n\
	\n\
	if response is None: \n\
		cmds.warning('Error trying to install.')\n\
		return    \n\
	\n\
	try:\n\
		fileSize        = int(response.info().getheaders('Content-Length')[0])\n\
		fileSizeDl      = 0\n\
		blockSize       = 128\n\
		output          = open(saveFile,'wb')    \n\
		progBar         = mel.eval('$tmp = $gMainProgressBar')    \n\
		\n\
		cmds.progressBar( progBar,\n\
							edit=True,\n\
							beginProgress=True,\n\
							status='Downloading Pipeline...',\n\
							progress=0,\n\
							maxValue=100 )    \n\
		\n\
		while True:\n\
			buffer = response.read(blockSize)\n\
			if not buffer:\n\
				output.close()\n\
				cmds.progressBar(progBar, edit=True, progress=100)  \n\
				cmds.progressBar(progBar, edit=True, endProgress=True)          \n\
				break\n\
		\n\
			fileSizeDl += len(buffer)\n\
			output.write(buffer)\n\
			p = float(fileSizeDl) / fileSize *100\n\
			\n\
			cmds.progressBar(progBar, edit=True, progress=p)  \n\
			\n\
	except:\n\
		output = open(saveFile,'wb')\n\
		output.write(response.read())\n\
		output.close()\n\
	return output\n\
launchInstall()\n\
\n\
currentShelf = cmds.tabLayout(mel.eval('$nul=$gShelfTopLevel'),q=1,st=1)\n\
def find():\n\
    buttons = [b for b in cmds.shelfLayout(currentShelf, q=True, ca=True) if 'separator' not in b]\n\
    for b in buttons:\n\
        if cmds.shelfButton(b, q=True, l=True) == 'pipeline':\n\
            return True\n\
            break\n\
\n\
if not find():\n\
    cmds.shelfButton(parent=currentShelf,i=os.path.join(os.environ['MAYA_APP_DIR'],cmds.about(version=True),'scripts','pipeline','pipeline_logo32.svg'),label='pipeline',c='import pipeline;pipeline.start()',annotation='Pipeline 2')\n\
");